<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LoadingPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        K1lxYXVGVi9GbVExRnpQL1haak11L0pNQzljN2I=
</value>
  </data>
</root>